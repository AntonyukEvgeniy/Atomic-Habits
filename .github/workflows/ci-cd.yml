name: CI/CD Pipeline
on:
  push:
    branches: [ "35.2-GitHub-Actions"]
  pull_request:
    branches: [ "35.2-GitHub-Actions" ]
env:
  PYTHON_VERSION: "3.12"
  POETRY_VERSION: "1.7.1"
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.8
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:6
        ports:
          - 6379:6379
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 - --version ${{ env.POETRY_VERSION }}

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create false

    - name: Install Dependencies
      run: poetry install

    - name: Run Tests
      env:
        SECRET_KEY: test_key
        DEBUG: "True"
        DATABASE_NAME: test_db
        DATABASE_USER: test_user
        DATABASE_PASSWORD: test_password
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
        CELERY_BROKER_URL: redis://localhost:6379/0
        CELERY_RESULT_BACKEND: redis://localhost:6379/0
      run: |
        pytest

    - name: Code Quality Checks
      run: |
        poetry run black . --check
        poetry run flake8 .
        poetry run isort . --check-only
  build:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/35.2-GitHub-Actions'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: atomic-habits:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
  deploy:
    needs: build
    if: github.ref == 'refs/heads/35.2-GitHub-Actions'
    runs-on: ubuntu-latest

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            cd /home/${{ secrets.SERVER_USERNAME }}/atomic-habits
            git pull origin 35.2-GitHub-Actions
            source venv/bin/activate
            poetry install
            python manage.py migrate
            python manage.py collectstatic --noinput
            sudo systemctl restart gunicorn
